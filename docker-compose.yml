version: '3.9'

services:
  postgres:
    image: postgres:11.13
    container_name: postgres
    env_file:
      - ./t1.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#  client-processing:
#    image: client-processing:latest
#    build:
#      context: ./client-processing
#      dockerfile: Dockerfile
#    depends_on:
#      postgres:
#        condition: service_healthy
#    env_file:
#      - ./t1.env
#    environment:
#      SERVER_PORT: 8082
#    ports:
#      - "8082:8082"

#  account-processing:
#    image: account-processing:latest
#    build:
#      context: ./account-processing
#      dockerfile: Dockerfile
#    depends_on:
#      postgres:
#        condition: service_healthy
#    env_file:
#      - ./t1.env
#    environment:
#      SERVER_PORT: 8081
#    ports:
#      - "8081:8081"
#
#  credit-processing:
#    image: credit-processing:latest
#    build:
#      context: ./credit-processing
#      dockerfile: Dockerfile
#    depends_on:
#      postgres:
#        condition: service_healthy
#    env_file:
#      - ./t1.env
#    environment:
#      SERVER_PORT: 8083
#    ports:
#      - "8083:8083"

volumes:
  postgres-data:
